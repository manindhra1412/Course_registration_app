<!-- views/teacher.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teacher Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container mt-5">
        <h2 class="text-center">Teacher Dashboard</h2>

        <!-- Add Course Form -->
        <div class="mt-4">
            <h4>Add a New Course</h4>
            <form id="addCourseForm">
                <div class="mb-3">
                    <label for="courseTitle" class="form-label">Course Title</label>
                    <input type="text" class="form-control" id="courseTitle" name="title" required>
                </div>
                <div class="mb-3">
                    <label for="courseCode" class="form-label">Course Code</label>
                    <input type="text" class="form-control" id="courseCode" name="code" required>
                </div>
                <div class="mb-3">
                    <label for="semester" class="form-label">Semester</label>
                    <input type="number" class="form-control" id="semester" name="semester" required>
                </div>
                <div class="mb-3">
                    <label for="credits" class="form-label">Credits</label>
                    <input type="number" class="form-control" id="credits" name="credits" required>
                </div>
                <div class="mb-3">
                    <label for="status" class="form-label">Status</label>
                    <select class="form-select" id="status" name="status" required>
                        <option value="true">Active</option>
                        <option value="false">Inactive</option>
                    </select>
                </div>
                <button type="button" class="btn btn-primary" onclick="addCourse()">Add Course</button>
            </form>
        </div>

        <!-- List of Courses -->
        <div class="mt-5">
            <h4>My Courses</h4>
            <ul id="courseList" class="list-group">
                <!-- Course list will be dynamically rendered here -->
            </ul>
        </div>
    </div>

    <script>
        // Function to fetch and render all courses
        async function fetchCourses() {
            try {
                const response = await fetch('/api/teacher/course');
                if (response.ok) {
                    const courses = await response.json();
                    renderCourseList(courses);
                } else {
                    alert('Failed to load courses');
                }
            } catch (error) {
                console.error('Error fetching courses:', error);
            }
        }

        // Function to render the course list
        function renderCourseList(courses) {
            const courseList = document.getElementById('courseList');
            courseList.innerHTML = '';  // Clear current list

            courses.forEach(course => {
                const courseItem = document.createElement('li');
                courseItem.className = 'list-group-item d-flex justify-content-between align-items-center';
                courseItem.innerHTML = `
                    <div>
                        <a href="/teacher/course/${course._id}" class="text-decoration-none">
                            <strong>${course.title}</strong>
                        </a> - ${course.code} | Semester: ${course.semester} | Credits: ${course.credits} 
                        | Status: ${course.status ? 'Active' : 'Inactive'}
                    </div>
                    <button onclick="deleteCourse('${course._id}')" class="btn btn-danger btn-sm">Delete</button>
                `;
                courseList.appendChild(courseItem);
            });
        }

        // Function to add a new course
        async function addCourse() {
            const title = document.getElementById('courseTitle').value;
            const code = document.getElementById('courseCode').value;
            const semester = parseInt(document.getElementById('semester').value);
            const credits = parseInt(document.getElementById('credits').value);
            const status = document.getElementById('status').value === 'true';

            try {
                const response = await fetch('/api/teacher/course', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ title, code, semester, credits, status })
                });

                if (response.ok) {
                    document.getElementById('addCourseForm').reset();
                    fetchCourses();
                } else {
                    alert('Failed to add course');
                }
            } catch (error) {
                console.error('Error adding course:', error);
            }
        }

        // Function to delete a course
        async function deleteCourse(courseId) {
            try {
                const response = await fetch(`/api/teacher/delete-course/${courseId}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    fetchCourses();
                } else {
                    alert('Failed to delete course');
                }
            } catch (error) {
                console.error('Error deleting course:', error);
            }
        }

        // Initial fetch of courses when page loads
        fetchCourses();
    </script>
</body>

</html>