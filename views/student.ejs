<!-- views/student.ejs -->
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>

<body>
    <div class="container mt-5">
        <h2>Welcome, <%= user.name %> (Student)</h2>

        <!-- Add Course Form -->
        <div class="mt-4">
            <h4>Enroll in a Course</h4>
            <form id="addCourseForm">
                <label for="code">Course ID:</label>
                <input type="text" id="code" name="code" required>
                <button type="button" class="btn btn-primary" onclick="addCourse()">Add Course</button>
            </form>
        </div>

        <!-- Enrolled Courses by Semester -->
        <div class="mt-5">
            <h4>Enrolled Courses</h4>
            <div id="enrolledCourses"></div>
        </div>
    </div>

    <script>
        // Function to fetch and display enrolled courses organized by semester
        async function fetchEnrolledCourses() {
            try {
                const response = await fetch('/api/student/courses');
                if (response.ok) {
                    const courses = await response.json();
                    renderEnrolledCourses(courses);
                } else {
                    alert('Failed to load enrolled courses');
                }
            } catch (error) {
                console.error('Error fetching enrolled courses:', error);
            }
        }

        // Function to render the enrolled courses, grouped by semester
        function renderEnrolledCourses(courses) {
            const enrolledCoursesDiv = document.getElementById('enrolledCourses');
            enrolledCoursesDiv.innerHTML = '';  // Clear current list

            // Group courses by semester
            const coursesBySemester = courses.reduce((acc, course) => {
                (acc[course.semester] = acc[course.semester] || []).push(course);
                return acc;
            }, {});

            // Render courses for each semester
            Object.keys(coursesBySemester).sort().forEach(semester => {
                const semesterSection = document.createElement('div');
                semesterSection.classList.add('mt-3');
                semesterSection.innerHTML = `<h5>Semester ${semester}</h5>`;

                const courseList = document.createElement('ul');
                courseList.classList.add('list-group');
                coursesBySemester[semester].forEach(course => {
                    const courseItem = document.createElement('li');
                    courseItem.className = 'list-group-item';
                    courseItem.innerHTML = `<strong>${course.title}</strong> - ${course.code} | Credits: ${course.credits}`;
                    courseList.appendChild(courseItem);
                });

                semesterSection.appendChild(courseList);
                enrolledCoursesDiv.appendChild(semesterSection);
            });
        }

        // Function to add a new course
        async function addCourse() {
            const code = document.getElementById('code').value;

            try {
                const response = await fetch('/api/student/add-course', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ code })
                });

                if (response.ok) {
                    document.getElementById('addCourseForm').reset();  // Clear the form
                    fetchEnrolledCourses();  // Refresh the enrolled courses list
                } else {
                    alert('Failed to add course');
                }
            } catch (error) {
                console.error('Error adding course:', error);
            }
        }

        // Initial load of enrolled courses when page loads
        fetchEnrolledCourses();
    </script>
</body>

</html>